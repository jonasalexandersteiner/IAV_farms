Classes of variables: Create a code to mutate all classes of the variables and give something to check for each variable whether it worked

$Farm_ID
[1] "numeric"
ok

$total_no_of_samples
[1] "numeric"
ok


$no_positive_pigs
[1] "numeric"
ok

$percentage_positive_pigs
[1] "numeric"
ok

$min_cp
[1] "character"
mutate to numeric

$max_value
[1] "character"
mutate to numeric

$average_cp
[1] "character"
mutate to numeric

$std_dev
[1] "character"
mutate to numeric

$ILI_symptoms
[1] "logical"
ok

$Symptomatic_report
[1] "logical"
ok

$Date_Sampling
[1] "POSIXct" "POSIXt" 
ok

$Source_of_contact
[1] "character"
mutate to class factor, use a the same factor for words that repeat

$Canton
[1] "character"
mutate to class factor, use a the same factor for words that repeat


$Herdsize
[1] "numeric"
ok

$Other_animals
[1] "character"
the variable contains several variables in one: 

1	pig_closeby
2	horses_closeby
3	dogs_closeby
4	chicken_closeby
5	turkey_closeby
6	cattle_closeby
7	cats_closeby

create 7 new variables with the name above, class logical, level of the variable should be TRUE if the corresponding number is contained in other_animals: this is the code 

df1 <- df1 %>%
  mutate(
    pig_closeby     = grepl("\\b1\\b", Other_animals),
    horses_closeby  = grepl("\\b2\\b", Other_animals),
    dogs_closeby    = grepl("\\b3\\b", Other_animals),
    chicken_closeby = grepl("\\b4\\b", Other_animals),
    turkey_closeby  = grepl("\\b5\\b", Other_animals),
    cattle_closeby  = grepl("\\b6\\b", Other_animals),
    cats_closeby    = grepl("\\b7\\b", Other_animals)
  ) %>%
  relocate(
    pig_closeby, horses_closeby, dogs_closeby,
    chicken_closeby, turkey_closeby, cattle_closeby, cats_closeby,
    .after = Other_animals
  )


$Production_type
[1] "character"
mutate to factor

$`SGD/QGS`
[1] "numeric"
mutate to factor, only factors 4,5,6 exist

$Farrowing_on_farm
[1] "character"
mutate to logical

$Isemination_on_farm
[1] "character"
mutate to logical


$Gestation_on_farm
[1] "character"
mutate to logical


$Weaners_on_farm
[1] "character"
mutate to logical


$Fattening_on_farm
[1] "character"
mutate to logical


$Number_suckling_piglets
[1] "numeric"
ok

$Number_weaners
[1] "numeric"
ok

$Number_fattening_pigs
[1] "numeric"
ok

$Number_young_sows
[1] "numeric"
ok

$Number_old_sows
[1] "numeric"
ok

$Number_boars
[1] "numeric"
ok

$Number_of_origins
[1] "numeric"
ok

$Number_of_origins_suckiling_piglets
[1] "numeric"
ok

$Number_of_origins_weaners
[1] "numeric"
ok

$Number_of_origins_fattening_pigs
[1] "numeric"
ok

$Number_of_origins_young_sows
[1] "numeric"
ok

$Number_of_origins_old_sows
[1] "numeric"
ok

$Number_of_origins_boars
[1] "numeric"
ok

$Quarantaine_concept
[1] "logical"
ok

$Quarantaine_suckling_piglets
[1] "logical"
ok

$Quarantaine_Weaners
[1] "logical"
ok

$Quarantaine_Fatteners
[1] "logical"
ok

$Quarantaine_young_sows
[1] "logical"
ok

$Quarantaine_old_sows
[1] "logical"
ok

$Quarantaine_boars
[1] "logical"
ok

$Quarantaine_time
[1] "numeric"
ok

$Quarantaine_in_herd_contact
[1] "logical"
ok

$Herds_of_origin_respiratory_symptoms
[1] "logical"
ok

$Herds_of_origin_Influenza_diagnosis
[1] "logical"
ok

$Production_cycle
[1] "numeric"
ok

$Mode_stable_occupation_AI_centre
[1] "numeric"
mutate to factor

$Mode_stable_occupation_gilts_stable
[1] "numeric"
mutate to factor

$Mode_stable_occupation_farrowing_stable
[1] "numeric"
mutate to factor

$Litter_equalization_farrowing_stable
[1] "numeric"
mutate to factor

$Mode_stable_occupation_weaner_stable
[1] "numeric"
mutate to factor

$Mode_stable_occupation_fattener_stable
[1] "numeric"
mutate to factor

$Passing_through_other_age_group
[1] "logical"
ok

$Outside_area_AI_centre
[1] "logical"
ok

$Outside_area_gilts_stable
[1] "logical"
ok

$Outside_area_farrowing_stable
[1] "logical"
ok

$Outside_area_weaner_stable
[1] "logical"
ok

$Outside_area_fattener_stable
[1] "logical"
ok

$Outside_area_contact_poultry
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Outside_area_contact_wild_birds
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Outside_area_contact_wild_boars
[1] "logical"
ok

$Contact_poultry_in_stable
[1] "logical"
ok

$Isolation_respiratory_dieseased_pigs
[1] "numeric"
remove from df1

$Cleaning_AI_centre
[1] "numeric"
mutate to factor

$Cleaning_gilts_stable
[1] "numeric"
mutate to factor

$Cleaning_farrowing_stable
[1] "numeric"
mutate to factor

$Cleaning_weaner_stable
[1] "numeric"
mutate to factor

$Cleaning_fattener_stable
[1] "numeric"
mutate to factor

$Cleaning_quarantaine
[1] "numeric"
mutate to factor

$`Wie h√§ufig wird der Abferkelstall desinfiziert?`
[1] "numeric"
mutate to factor

$Desinfection_gilts_stable
[1] "numeric"
mutate to factor

$Desinfection_farrowing_stable
[1] "numeric"
mutate to factor

$Desinfection_weaner_stable
[1] "numeric"
mutate to factor

$Desinfection_fattener_stable
[1] "character"
mutate to factor

$Desinfection_quarantaine
[1] "numeric"
mutate to factor

$Drying_AI_Centre
[1] "numeric"
mutate to factor

$Drying_gilts_stable
[1] "numeric"
mutate to factor

$Drying_farrowing_stable
[1] "numeric"
mutate to factor

$Drying_weaner_stable
[1] "numeric"
mutate to factor

$Drying_fattener_stable
[1] "numeric"
mutate to factor

$Drying_quarantaine
[1] "numeric"
mutate to factor

$Cleaning_desinfection_transport_vehicle
[1] "numeric"
mutate to factor

$Cleaning_shipment_area
[1] "numeric"
mutate to factor

$Caretaker_type
[1] "numeric"
mutate to factor

$Caretaker_Number
[1] "numeric"

$Caretaker_PPE_stable
[1] "numeric"
mutate to factor

$Caretaker_PPE_washing_interval
[1] "numeric"
mutate to factor

$Caretaker_PPE_per_unit
[1] "numeric"
mutate to factor

$Caretaker_per_unit
[1] "logical"
ok

$Caretaker_Work_flow_hygiene_between_units
[1] "logical"
ok

$Caretaker_Entry_PPE_only
[1] "logical"
ok

$Caretaker_disease_management
[1] "numeric"
mutate to factor
ok

$Caretaker_Hands_washed_before_entry
[1] "logical"
ok

$Caretaker_Boot_desinfection
[1] "numeric"
mutate to factor

$Caretaker_contact_other_pigs
[1] "numeric"
mutate to factor

$Caretaker_contact_poultry
[1] "numeric"
mutate to factor

$Visitors_in_stable
[1] "numeric"
mutate to factor

$Visitors_in_stable_recent
[1] "numeric"
rename to visitors_6_months

$Visitors_cumulative_contact_hours
[1] "numeric"
ok

$Visitors_list
[1] "logical"
ok

$PPE_Visitors
[1] "numeric"
mutate to factor

$Visitors_Hands_washed_before_entry
[1] "logical"
ok

$Visitors_disease_management
[1] "numeric"
mutate to factor

$Visitors_contact_other_pigs
[1] "numeric"
mutate to factor

$Visitors_contact_poultry
[1] "numeric"
mutate to factor

$Visitors_respiratory_symptoms
[1] "logical"
ok

$Return_to_service_rate
[1] "numeric"
mutate to factor

$Farrowing_rate
[1] "numeric"
mutate to factor

$`Piglets_per_sow&year`
[1] "numeric"
mutate to factor

$`Abortions_per_sow&year`
[1] "numeric"
mutate to factor

$piglet_mortality
[1] "numeric"
mutate to factor

$Growing_rate_weaners
[1] "numeric"
mutate to factor

$Growing_rate_fatteners
[1] "numeric"
mutate to factor

$Feed_conversion_rate_weaners
[1] "numeric"
mutate to factor

$Feed_conversion_rate_fatteners
[1] "numeric"
mutate to factor

$Respiratory_history_swine
[1] "numeric"
mutate to factor

$Time_respiratory_disease
[1] "numeric"
mutate to factor

$`Frequency_respiratory disease_outbreaks`
[1] "character"


$Start_time_current_outbreak
[1] "numeric"

$Outbreak_since_examination
[1] "logical"

$Outbreak_since_examination_description
[1] "character"

$Percent_diseased_suckling_piglets
[1] "numeric"

$Percent_diseased_weaners
[1] "numeric"

$Percent_diseased_fatteners
[1] "numeric"

$Percent_diseased_young_sows
[1] "numeric"

$Percent_diseased_old_sows
[1] "numeric"

$Percent_diseased_boars
[1] "numeric"

$Percent_killed_suckling_piglets
[1] "numeric"
mutate to logical, TRUE is all always greather than 0, FALSE is 0, renmae to Killed_suckling_piglets

$Percent_killed_weaners
[1] "numeric"
mutate to logical, TRUE is all always greather than 0, FALSE is 0, renmae to Killed_Weaners

$Percent_killed_fatteners
[1] "numeric"
mutate to logical, TRUE is all always greather than 0, FALSE is 0, renmae to Killed_Fatteners

$Percent_killed_young_sows
[1] "numeric"
mutate to logical, TRUE is all always greather than 0, FALSE is 0, renmae to Killed_Young_Sows

$Percent_killed_old_sows
[1] "numeric"
remove from df 1, no variance

$Percent_killed_boars
[1] "numeric"
remove from df 1, no variance

$Symptom_type_swine
[1] "character"

df1 <- df1 %>%
  mutate(
    symptom_swine_sneezing        = grepl("\\b1\\b", Symptom_type_swine),
    symptom_swine_coughing        = grepl("\\b2\\b", Symptom_type_swine),
    symptom_swine_nasal_discharge = grepl("\\b3\\b", Symptom_type_swine),
    symptom_swine_fever           = grepl("\\b4\\b", Symptom_type_swine),
    symptom_swine_feed_intake_red = grepl("\\b5\\b", Symptom_type_swine),
    symptom_swine_apathy          = grepl("\\b6\\b", Symptom_type_swine),
    symptom_swine_dyspnoea        = grepl("\\b7\\b", Symptom_type_swine)
  ) %>%
  relocate(
    symptom_swine_sneezing,
    symptom_swine_coughing,
    symptom_swine_nasal_discharge,
    symptom_swine_fever,
    symptom_swine_feed_intake_red,
    symptom_swine_apathy,
    symptom_swine_dyspnoea,
    .after = Symptom_type_swine
  )
this is the code to be added in the skript


$Vet_consultation
[1] "logical"
ok

$Influenza_diagnosis
[1] "logical"
ok

$Influenza_vaccination
[1] "logical"
ok

$Respiratory_history_human
[1] "logical"
ok

$Respiratory_history_contact_person
[1] "character"
TBD

$Starting_point_current_disease
[1] "numeric"
ok

$Symptom_type_human
[1] "character"

df1 <- df1 %>%
  mutate(
    symptom_human_sneezing         = grepl("\\b1\\b", Symptom_type_human),
    symptom_human_coughing         = grepl("\\b2\\b", Symptom_type_human),
    symptom_human_nasal_discharge  = grepl("\\b3\\b", Symptom_type_human),
    symptom_human_fever            = grepl("\\b4\\b", Symptom_type_human),
    symptom_human_feed_intake_red  = grepl("\\b5\\b", Symptom_type_human),
    symptom_human_apathy           = grepl("\\b6\\b", Symptom_type_human),
    symptom_human_dyspnoea         = grepl("\\b7\\b", Symptom_type_human)
  ) %>%
  relocate(
    symptom_human_sneezing,
    symptom_human_coughing,
    symptom_human_nasal_discharge,
    symptom_human_fever,
    symptom_human_feed_intake_red,
    symptom_human_apathy,
    symptom_human_dyspnoea,
    .after = Symptom_type_human
  )
coded to be added for this variable


$Symptom_severity
[1] "numeric"
mutate to factor

$Physician_consultation
[1] "logical"
ok

$`Influenza_diagnosis_hum,an`
[1] "logical"
rename to Influenza_diagnosis_human

$Flu_vaccination
[1] "logical"
ok

$Flu_vaccination_contacts
[1] "logical"
ok

$`Chronic disease_conditon`
[1] "character"

$Smoker
[1] "logical"
ok

$Antiviral_treatment
[1] "logical"
remove due to no variance

$Age_group_weeks
[1] "character"
TBD

$Notes
[1] "character"
remvoe

$Seperation_between_production_units
[1] "numeric"
mutate to factor

$Seperation_within_production_units
[1] "numeric"
mutate to factor

$Seperation_quarantaine_area
[1] "numeric"
mutate to factor

$Bird_nests
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Verification_Outside_area_contact_poultry
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Verification_Outside_area_contact_wild_birds
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Verification_Contact_poultry_stable
[1] "numeric"
mutate to logical; value 1 means FALSE, everything else is TRUE

$Verification_Outside_area_contact_wild_boars
[1] "logical"
ok

$Verification_Isolation_respiratory_dieseased_pigs
[1] "numeric"
remove due to unapplied practice

$Farrowing_Sows_Reduced_general_wellbeing
[1] "numeric"
remove due to no variance

$Farrowing_Sows_sneezing
[1] "numeric"
remove due to no variance

$Farrowing_Sows_coughing
[1] "numeric"
mutate to logical, 0 is FALSE, everything greater than 0 TRUE, NA remains NA

$Farrowing_Sows_nasal_discharge
[1] "numeric"
remove

$Farrowing_Sows_rectal_temperature
[1] "logical"
remove

$Farrowing_Piglets_Reduced_general_wellbeing
[1] "numeric"
mutate to logical, 0 is FALSE, everything greater than 0 TRUE, NA remains NA

$Farrowing_Piglets_sneezing
[1] "numeric"
rename to Farrowing_Piglet_litters_sneezing_percentage

$Farrowing_Piglets_coughing
[1] "numeric"
rename to Farrowing_Piglet_litters_sneezing_percentage


$Farrowing_Piglets_nasal_discharge
[1] "numeric"
remvove

$Farrowing_Piglets_rectal_temperature
[1] "character"
mutate to numeric


$Farrowing_Delta_room_temperature
[1] "character"
mutate to numeric, rename to Farrowing_room_temperature

$Farrowings_nest_temperature
[1] "character"
rename to Farrowing_nest_temperature_ok, mutate to logical, TRUE is "acceptable", NA remains NA; FALSE is everything other than "acceptable"

$Farrowing_Airflow
[1] "character"
mutate to numeric

$Farrowing_air_quality
[1] "numeric"
mutate to factor

$Farrowing_airspace_with_other_agegroup
[1] "numeric"
mutate to factor

$AI_Sows_Reduced_general_wellbeing
[1] "numeric"
remove due to no variance

$AI_Sows_sneezing
[1] "numeric"
remove due to no variance

$AI_Sows_coughing
[1] "numeric"
remove due to no variance

$AI_Sows_discharge
[1] "numeric"
remove due to no variance

$AI_Sows_rectal_temperature
[1] "character"
remove due to no variance

$AI_Sows_Delta_room_temperature
[1] "character"
mutate to numerical, rename to AI_Sows_room_temperature

$AI_Sows_Airflow
[1] "character"
mutate to numerical

$AI_sows_air_quality
[1] "numeric"
mutate to factor

$AI_airspace_with_other_agegroup
[1] "numeric"
mutate to factor

$Gilts_Reduced_general_wellbeing
[1] "numeric"
mutate to logical, 0 is FALSE, everything greater than 0 TRUE, NA remains NA

$Gilts_sneezing
[1] "numeric"
mutate to logical, 0 is FALSE, everything greater than 0 TRUE, NA remains NA

$Gilts_coughing
[1] "numeric"
mutate to logical, 0 is FALSE, everything greater than 0 TRUE, NA remains NA

$Gilts_discharge
[1] "numeric"
remove due to no variance

$Gilts_rectal_temperature
[1] "character"
remove due to no variance

$Gilts_qm_per_animal
[1] "character"
mutate to numeric

$Gitls_animals_per_water_source
[1] "character"
mutate to numeric

$Gilts_Delta_room_temperature
[1] "character"
mutate to numeric, rename to Gilts_room_temperature

$Gilts_Airflow
[1] "character"
mutate to numeric

$Gilts_air_quality
[1] "numeric"
mutate to factor

$Gilts_airspace_with_other_agegroup
[1] "numeric"
mutate to factor

$Weaners_Reduced_general_wellbeing
[1] "numeric"
ok

$Weaners_sneezing
[1] "character"
mutate to numeric


$Weaners_coughing
[1] "character"
mutate to numeric

$Weaners_discharge
[1] "numeric"
ok

$Weaners_rectal_temperature
[1] "character"
mutate to numeric

$Weaners_qm_per_animal
[1] "character"
mutate to numeric

$Weaners_animals_per_feeding_site
[1] "character"

df1 <- df1 %>%
  mutate(
    Weaners_animals_per_feeding_site_factor = factor(
      ifelse(
        grepl("cm/Tier", Weaners_animals_per_feeding_site, ignore.case = TRUE), "cm/Tier",
        cut(
          as.numeric(sub("^([0-9]+\\.?[0-9]*).*", "\\1", Weaners_animals_per_feeding_site)),
          breaks = c(-Inf, 10, 20, 30, 40, 50, Inf),
          labels = c("< 10", "10‚Äì19.99", "20‚Äì29.99", "30‚Äì39.99", "40‚Äì49.99", "‚â• 50"),
          right = FALSE
        )
      ),
      levels = c("< 10", "10‚Äì19.99", "20‚Äì29.99", "30‚Äì39.99", "40‚Äì49.99", "‚â• 50", "cm/Tier")
    )
  ) %>%
  relocate(Weaners_animals_per_feeding_site_factor, .after = Weaners_animals_per_feeding_site)

this could is to be implemented

$Weaners_animals_per_water_source
[1] "character"
mutate to numeric

$Weaners_Delta_room_temperature
[1] "character"
mutate to numeric

$Weaners_Airflow
[1] "character"
mutate to numeric

$Weaners_air_quality
[1] "numeric"
mutate to factor

$Weaners_airspace_with_other_agegroup
[1] "numeric"
mutate to factor

$Fatteners_Reduced_general_wellbeing
[1] "numeric"
ok

$Fatteners_sneezing
[1] "character"
mutate to numeric

$Fatteners_coughing
[1] "character"
mutate to numeric

$Fatteners_discharge
[1] "numeric"
mutate to numeric

$Fatteners_rectal_temperature
[1] "character"
mutate to numeric

$Fatteners_qm_per_animal
[1] "character"
mutate to numeric

$Fatteners_feeding_site_width_per_animal
[1] "character"

make_category <- function(x) {
  if (grepl("Tiere/Automat", x, ignore.case = TRUE)) {
    num <- as.numeric(sub("^([0-9]+\\.?[0-9]*)\\s*Tiere/Automat.*$", "\\1", x))
    if (!is.na(num)) {
      if (num < 15) return("Tiere/Automat - Low")
      if (num < 25) return("Tiere/Automat - Medium")
      return("Tiere/Automat - High")
    }
  }
  if (grepl("^\\s*-?\\d*\\.?\\d+\\s*$", x)) {
    num <- as.numeric(x)
    if (!is.na(num)) {
      if (num < 15) return("Numeric - Low")
      if (num < 25) return("Numeric - Medium")
      return("Numeric - High")
    }
  }
  return("Numeric - Low") # fallback for "other" or NA
}

category_levels <- c(
  "Tiere/Automat - Low", "Tiere/Automat - Medium", "Tiere/Automat - High",
  "Numeric - Low", "Numeric - Medium", "Numeric - High"
)

df1 <- df1 %>%
  mutate(Fatteners_feeding_site_per_animal_factor = factor(
    sapply(Fatteners_feeding_site_width_per_animal, make_category),
    levels = category_levels
  )) %>%
  relocate(Fatteners_feeding_site_per_animal_factor, .after = Fatteners_feeding_site_width_per_animal)

this code is to be implemented

$Fatteners_animals_per_water_source
[1] "character"
mutate to numeric

$Fatteners_Delta_room_temperature
[1] "character"
mutate to numeric, rename to $Fatteners_room_temperature

$Fatteners_Airflow
[1] "character"
mutate to numeric

$Fatteners_air_quality
[1] "numeric"
mutate to factor

$Fatteners_airspace_with_other_agegroup
[1] "numeric"
mutate to factor